[{"D:\\abdumalik\\grapp\\src\\index.js":"1","D:\\abdumalik\\grapp\\src\\App.js":"2","D:\\abdumalik\\grapp\\src\\reportWebVitals.js":"3","D:\\abdumalik\\grapp\\src\\redux\\store.js":"4","D:\\abdumalik\\grapp\\src\\screens\\index.js":"5","D:\\abdumalik\\grapp\\src\\components\\index.js":"6","D:\\abdumalik\\grapp\\src\\components\\Table.js":"7","D:\\abdumalik\\grapp\\src\\components\\ClientTable.js":"8","D:\\abdumalik\\grapp\\src\\screens\\Main.js":"9","D:\\abdumalik\\grapp\\src\\redux\\reducers\\index.js":"10","D:\\abdumalik\\grapp\\src\\components\\Modal.js":"11","D:\\abdumalik\\grapp\\src\\components\\Sidebar.js":"12","D:\\abdumalik\\grapp\\src\\components\\Countries.js":"13","D:\\abdumalik\\grapp\\src\\components\\Sidemenu.js":"14","D:\\abdumalik\\grapp\\src\\components\\ClientList.js":"15","D:\\abdumalik\\grapp\\src\\components\\Client.js":"16","D:\\abdumalik\\grapp\\src\\components\\Transport.js":"17","D:\\abdumalik\\grapp\\src\\components\\PaymentForm.js":"18","D:\\abdumalik\\grapp\\src\\components\\Period.js":"19","D:\\abdumalik\\grapp\\src\\components\\VoditelList.js":"20","D:\\abdumalik\\grapp\\src\\components\\TransportList.js":"21","D:\\abdumalik\\grapp\\src\\components\\TopControls.js":"22","D:\\abdumalik\\grapp\\src\\components\\Transh.js":"23","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\index.js":"24","D:\\abdumalik\\grapp\\src\\redux\\actions\\oplata.js":"25","D:\\abdumalik\\grapp\\src\\redux\\reducers\\transhReducer.js":"26","D:\\abdumalik\\grapp\\src\\redux\\reducers\\oplataReducer.js":"27","D:\\abdumalik\\grapp\\src\\redux\\reducers\\anketaReducer.js":"28","D:\\abdumalik\\grapp\\src\\redux\\reducers\\polisReducer.js":"29","D:\\abdumalik\\grapp\\src\\components\\UnvisibleFormElements.js":"30","D:\\abdumalik\\grapp\\src\\redux\\reducers\\transportReducer.js":"31","D:\\abdumalik\\grapp\\src\\redux\\reducers\\contractReducer.js":"32","D:\\abdumalik\\grapp\\src\\constants\\countries.js":"33","D:\\abdumalik\\grapp\\src\\redux\\actions\\transh.js":"34","D:\\abdumalik\\grapp\\src\\constants\\paymentTypes.js":"35","D:\\abdumalik\\grapp\\src\\redux\\actions\\contract.js":"36","D:\\abdumalik\\grapp\\src\\helpers\\addDates.js":"37","D:\\abdumalik\\grapp\\src\\components\\VoditelTable.js":"38","D:\\abdumalik\\grapp\\src\\components\\VoditelCreate.js":"39","D:\\abdumalik\\grapp\\src\\redux\\actions\\transport.js":"40","D:\\abdumalik\\grapp\\src\\helpers\\getCurrentDate.js":"41","D:\\abdumalik\\grapp\\src\\helpers\\summation.js":"42","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Form.js":"43","D:\\abdumalik\\grapp\\src\\redux\\actions\\index.js":"44","D:\\abdumalik\\grapp\\src\\redux\\constants.js":"45","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Anketa.js":"46","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Contract.js":"47","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Payment.js":"48","D:\\abdumalik\\grapp\\src\\redux\\actions\\anketa.js":"49","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\TransportTable.js":"50","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Polis.js":"51","D:\\abdumalik\\grapp\\src\\constants\\currencies.js":"52","D:\\abdumalik\\grapp\\src\\helpers\\getMaxDate.js":"53","D:\\abdumalik\\grapp\\src\\helpers\\getDaysBetweenTwoDates.js":"54","D:\\abdumalik\\grapp\\src\\constants\\currencyConditions.js":"55"},{"size":478,"mtime":1611041690454,"results":"56","hashOfConfig":"57"},{"size":675,"mtime":1612272050055,"results":"58","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"57"},{"size":213,"mtime":1611723762873,"results":"60","hashOfConfig":"57"},{"size":96,"mtime":1611052269950,"results":"61","hashOfConfig":"57"},{"size":801,"mtime":1612765830533,"results":"62","hashOfConfig":"57"},{"size":1717,"mtime":1612965461179,"results":"63","hashOfConfig":"57"},{"size":2837,"mtime":1612765830103,"results":"64","hashOfConfig":"57"},{"size":187,"mtime":1611220931884,"results":"65","hashOfConfig":"57"},{"size":473,"mtime":1612164318030,"results":"66","hashOfConfig":"57"},{"size":314,"mtime":1611556799531,"results":"67","hashOfConfig":"57"},{"size":1284,"mtime":1611556822427,"results":"68","hashOfConfig":"57"},{"size":731,"mtime":1612335709732,"results":"69","hashOfConfig":"57"},{"size":3479,"mtime":1611204875139,"results":"70","hashOfConfig":"57"},{"size":1325,"mtime":1612765830102,"results":"71","hashOfConfig":"57"},{"size":24579,"mtime":1612765830097,"results":"72","hashOfConfig":"57"},{"size":25971,"mtime":1612860247989,"results":"73","hashOfConfig":"57"},{"size":2890,"mtime":1612955684507,"results":"74","hashOfConfig":"57"},{"size":2521,"mtime":1612767879447,"results":"75","hashOfConfig":"57"},{"size":1785,"mtime":1612765830532,"results":"76","hashOfConfig":"57"},{"size":6147,"mtime":1613054665238,"results":"77","hashOfConfig":"57"},{"size":882,"mtime":1611063503081,"results":"78","hashOfConfig":"57"},{"size":7370,"mtime":1612765830409,"results":"79","hashOfConfig":"57"},{"size":47,"mtime":1611669647591,"results":"80","hashOfConfig":"57"},{"size":407,"mtime":1612177836079,"results":"81","hashOfConfig":"57"},{"size":349,"mtime":1612332952889,"results":"82","hashOfConfig":"57"},{"size":468,"mtime":1612332924489,"results":"83","hashOfConfig":"57"},{"size":290,"mtime":1612332880210,"results":"84","hashOfConfig":"57"},{"size":347,"mtime":1612332942698,"results":"85","hashOfConfig":"57"},{"size":635,"mtime":1611220213603,"results":"86","hashOfConfig":"57"},{"size":1525,"mtime":1612765830566,"results":"87","hashOfConfig":"57"},{"size":693,"mtime":1612765830565,"results":"88","hashOfConfig":"57"},{"size":143,"mtime":1611723762842,"results":"89","hashOfConfig":"57"},{"size":172,"mtime":1612182467530,"results":"90","hashOfConfig":"57"},{"size":363,"mtime":1611652622642,"results":"91","hashOfConfig":"57"},{"size":433,"mtime":1612765830546,"results":"92","hashOfConfig":"57"},{"size":347,"mtime":1611640846562,"results":"93","hashOfConfig":"57"},{"size":1489,"mtime":1613021641710,"results":"94","hashOfConfig":"57"},{"size":5872,"mtime":1613031198388,"results":"95","hashOfConfig":"57"},{"size":598,"mtime":1612765830547,"results":"96","hashOfConfig":"57"},{"size":288,"mtime":1611561137384,"results":"97","hashOfConfig":"57"},{"size":309,"mtime":1612158403563,"results":"98","hashOfConfig":"57"},{"size":3014,"mtime":1612853373319,"results":"99","hashOfConfig":"57"},{"size":339,"mtime":1612177852087,"results":"100","hashOfConfig":"57"},{"size":784,"mtime":1612765830563,"results":"101","hashOfConfig":"57"},{"size":13255,"mtime":1612768070000,"results":"102","hashOfConfig":"57"},{"size":7614,"mtime":1612864906877,"results":"103","hashOfConfig":"57"},{"size":4015,"mtime":1612955480362,"results":"104","hashOfConfig":"57"},{"size":168,"mtime":1612265373511,"results":"105","hashOfConfig":"57"},{"size":1243,"mtime":1613027017476,"results":"106","hashOfConfig":"57"},{"size":14368,"mtime":1612334033044,"results":"107","hashOfConfig":"57"},{"size":145,"mtime":1611642502835,"results":"108","hashOfConfig":"57"},{"size":280,"mtime":1611567012347,"results":"109","hashOfConfig":"57"},{"size":473,"mtime":1612765830535,"results":"110","hashOfConfig":"57"},{"size":1379,"mtime":1611555763467,"results":"111","hashOfConfig":"57"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"4pphgs",{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"114"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"114"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"114"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"114"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"114"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"114"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"114"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"114"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"114"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"114"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"114"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"114"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"114"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},"D:\\abdumalik\\grapp\\src\\index.js",[],["236","237"],"D:\\abdumalik\\grapp\\src\\App.js",[],"D:\\abdumalik\\grapp\\src\\reportWebVitals.js",[],"D:\\abdumalik\\grapp\\src\\redux\\store.js",[],"D:\\abdumalik\\grapp\\src\\screens\\index.js",[],"D:\\abdumalik\\grapp\\src\\components\\index.js",[],"D:\\abdumalik\\grapp\\src\\components\\Table.js",["238"],"import React, { Fragment} from 'react';\r\nimport {deletePayment} from '../redux/actions/oplata';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nconst MyTable = ({\r\n    columns = [],\r\n    data = [],\r\n    onRowClick = () => { }\r\n}) => {\r\n    \r\n    const deleteItem = (id) =>{\r\n        ipcRenderer.send(\"delete-oplata\", id);\r\n        ipcRenderer.on('delete-oplata', deleted);\r\n    }\r\n    const deleted=(event)=>{\r\n        ipcRenderer.removeListener(\"delete-oplata\",deleted);\r\n    }\r\n    console.log(data);\r\n    return (\r\n        <table className=\"bordered-table\" border=\"1\">\r\n            <thead>\r\n                <tr>\r\n                    {columns.map(({ title }, columnKey) => (\r\n                        <th className=\"text-center\" key={columnKey}>\r\n                            {title}\r\n                        </th>\r\n                    ))}\r\n                    <th></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map((row, rowKey) => (\r\n                    <tr key={rowKey} onClick={() => onRowClick(row)}>\r\n                        {columns.map(({ dataIndex, render, collapse }, columnKey) => (\r\n                            <Fragment key={columnKey}>\r\n                                <td>{render ? render(row[dataIndex], row, rowKey) : row[dataIndex]}</td>\r\n                            </Fragment>\r\n                        ))}\r\n                        <td>\r\n                            <button onClick={()=>deleteItem(rowKey)}>\r\n                                Delete\r\n                            </button>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\nexport default MyTable;\r\n","D:\\abdumalik\\grapp\\src\\components\\ClientTable.js",["239","240","241"],"import React,{\r\n\tuseEffect,\r\n\tuseState\r\n} from 'react';\r\nimport leftArrow from '../assets/icons/arrow-left.svg';\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\n\r\nconst ClientTable = (props) => {\r\n\r\n\tuseEffect(()=>{\r\n\t\tipcRenderer.send('get-clients', props.restricted);\r\n\t\tipcRenderer.on('get-clients', list);\r\n\t\tipcRenderer.on('insert-client-from-archive', selectClient);\r\n\t\treturn ()=>{\r\n\t\t\tipcRenderer.removeListener('get-clients', list);\r\n\t\t\tipcRenderer.removeListener('insert-client-from-archive', selectClient);\r\n\t\t}\t\r\n\t},[]);\r\n\r\n\tconst [clients, setClients]=useState([]);\r\n\r\n\tconst list=(event, payload)=>{\r\n\t\tsetClients(payload);\r\n\t} \r\n\tconst saveSelected=(id)=>{\r\n\t\tipcRenderer.send('insert-client-from-archive', id);\r\n\t}\r\n\tconst selectClient=(event, name, id, archive_id)=>{\r\n\t  props.action(name, id,archive_id);\r\n\t  props.setShow(false);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!props.juridic &&\r\n\t\t\t\t<table className=\"bordered-table\" border=\"1\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr style={{ backgroundColor: \"skyblue\" }}>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th>First Name</th>\r\n\t\t\t\t\t\t\t<th>Last Name</th>\r\n\t\t\t\t\t\t\t<th>Patronymic</th>\r\n\t\t\t\t\t\t\t<th>Passport Serie</th>\r\n\t\t\t\t\t\t\t<th>Passport Number</th>\r\n\t\t\t\t\t\t\t<th>EDIT</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{clients.map(item=>{\r\n\t\t\t\t\t\t\tif(!item.fiz){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={()=>saveSelected(item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t\t<img src={leftArrow} alt=\"leftArrow\" />\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.fiz.TB_NAME}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.fiz.TB_SURNAME}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.fiz.TB_PATRONYM}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.fiz.TB_PASPSERY}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{item.fiz.TB_PASPNUMBER}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<button onClick={()=>props.edit(item)}>EDIT</button>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t}\r\n\t\t\t{props.juridic &&\r\n\t\t\t\t<table className=\"bordered-table\" border=\"1\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr style={{ backgroundColor: \"skyblue\" }}>\r\n\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t<th>Inn</th>\r\n\t\t\t\t\t\t\t<th>Raschotniy schot</th>\r\n\t\t\t\t\t\t\t<th>EDIT</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{clients.map(item=>{\r\n\t\t\t\t\t\t\tif(!item.jur){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td width=\"5%\">\r\n\t\t\t\t\t\t\t\t\t<button onClick={()=>selectClient(item.jur.TB_ORGNAME, item.id)}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={leftArrow} alt=\"leftArrow\" />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{item.jur.TB_ORGNAME}</td>\r\n\t\t\t\t\t\t\t\t<td>{item.jur.TB_ORGINN}</td>\r\n\t\t\t\t\t\t\t\t<td>{item.jur.TB_ORGSCHET}</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<button onClick={()=>props.edit(item)}>EDIT</button>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ClientTable;","D:\\abdumalik\\grapp\\src\\screens\\Main.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\index.js",[],"D:\\abdumalik\\grapp\\src\\components\\Modal.js",[],"D:\\abdumalik\\grapp\\src\\components\\Sidebar.js",[],"D:\\abdumalik\\grapp\\src\\components\\Countries.js",[],"D:\\abdumalik\\grapp\\src\\components\\Sidemenu.js",[],"D:\\abdumalik\\grapp\\src\\components\\ClientList.js",[],"D:\\abdumalik\\grapp\\src\\components\\Client.js",["242","243"],"import React, { useState,useEffect }  from \"react\";\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\n\r\nconst Client=(props)=>{\r\n    useEffect(()=>{\r\n      ipcRenderer.on('client-saved', save2)\r\n      if(!props.initialObject){\r\n        return;\r\n      }\r\n      setJurObject({...props.initialObject.jur});\r\n      setFizObject({...props.initialObject.fiz});\r\n      delete props.initialObject.fiz;\r\n      delete props.initialObject.jur;\r\n      setCommonObject({...props.initialObject});\r\n\r\n      return ()=>{\r\n        ipcRenderer.removeListener('client-saved', save2);\r\n      }\r\n    }, [\"init\"]);\r\n    \r\n    const [jurObject, setJurObject]=useState({});\r\n    const [fizObject, setFizObject]=useState({});\r\n    const [commonObject, setCommonObject]=useState({});\r\n    const setProp=(type, prop, value)=>{\r\n        switch(type){\r\n            case 'fiz':\r\n                setFizObject({...fizObject, [prop]:value});\r\n                break;\r\n            case 'yur':\r\n                setJurObject({...jurObject, [prop]:value});\r\n                break;\r\n            case 'common':\r\n                setCommonObject({...commonObject, [prop]:value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const save=()=>{\r\n        ipcRenderer.send('save-client',{\r\n          c:{...commonObject},\r\n          d:{...props.juridic?jurObject:fizObject},\r\n          type:props.juridic?1:0\r\n        });\r\n\r\n    }\r\n    const save2=(event, args)=>{\r\n        if(props.juridic)\r\n            props.action(args.name, args.id, args.archive_id);\r\n        else\r\n            props.action(args.name, args.id, args.archive_id);\r\n\r\n        props.setShow(false);\r\n    }\r\n    return (\r\n        <div className=\"client-form hyper-form\">\r\n            <form className=\"mt-5\">\r\n                <div className=\"input-group\">\r\n                    <label >Резидент</label>\r\n                    <div className=\"form-check\">\r\n                        <input type=\"radio\"\r\n                               name=\"TB_REZIDENT\" \r\n                               value={commonObject.TB_REZIDENT}\r\n                               onChange={e=>setProp('common',e.target.name, true)} \r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                            Да\r\n                        </label>\r\n                    </div>\r\n                    <div className=\" form-check\">\r\n                        <input  type=\"radio\" \r\n                                name=\"TB_REZIDENT\" \r\n                                value={false} \r\n                                onChange={e=>setProp('common',e.target.name, false)} \r\n                        />\r\n                        <label className=\"form-check-label\">\r\n                            Нет\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                {props.juridic && \r\n                    <div className=\"juridic\">\r\n                    \r\n                    <div className=\"input-group\">\r\n                        <div className=\"\">\r\n                            <label >ИНН</label><br />\r\n                            <input max=\"999999999\" \r\n                                   name=\"TB_ORGINN\" \r\n                                   type=\"number\"\r\n                                   value={jurObject.TB_ORGINN}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label >Наименование организации</label><br />\r\n                            <input name=\"TB_ORGNAME\" \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_ORGNAME}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"\">\r\n                            <label >ОКОНХ</label><br />\r\n                            <input maxLength=\"5\" \r\n                                   name=\"TB_KOD_OKONX\" \r\n                                   type=\"number\" \r\n                                   value={jurObject.TB_KOD_OKONX}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label >ОКЕД</label><br />\r\n                            <input maxLength=\"5\"\r\n                                   name=\"TB_KOD_OKED\" \r\n                                   type=\"number\" \r\n                                   value={jurObject.TB_KOD_OKED}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"\">\r\n                            <label >МФО</label><br />\r\n                            <input maxLength=\"5\" \r\n                                   name=\"TB_ORGMFO\" \r\n                                   type=\"number\"\r\n                                   value={jurObject.TB_ORGMFO}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label >Банк</label><br />\r\n                            <input name=\"TB_ORGBANK\" \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_ORGBANK}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label >Расчётный счёт</label><br />\r\n                            <input name=\"TB_ORGSCHET\" \r\n                                   type=\"number\" \r\n                                   value={jurObject.TB_ORGSCHET}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"\">\r\n                            <label >ОКПО</label><br />\r\n                            <input name=\"TB_KOD_OKPO\" \r\n                                   type=\"number\" \r\n                                   value={jurObject.TB_KOD_OKPO}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label >СОАТО</label><br />\r\n                            <input name=\"TB_KOD_SOATO\" \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_KOD_SOATO}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"\"><br />\r\n                            <label >Директор</label><br />\r\n                            <input name=\"TB_DIREKTOR\"  \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_DIREKTOR}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\"><br />\r\n                            <label >Бухгалтер</label><br />\r\n                            <input name=\"TB_BUHGALTER\" \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_BUHGALTER}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"\">\r\n                            <label >Действует на основании</label>\r\n                            <input name=\"TB_BASIS\" \r\n                                   type=\"text\" \r\n                                   value={jurObject.TB_BASIS}\r\n                                   onChange={e=>setProp('yur',e.target.name, e.target.value)} \r\n                            />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <input type=\"checkbox\" \r\n                                   name=\"TB_ISBANK\" \r\n                                   checked={jurObject.TB_ISBANK}\r\n                                   value={jurObject.TB_ISBANK} \r\n                                   onChange={e=>setProp('yur',e.target.name, !jurObject.TB_ISBANK)} \r\n                            />\r\n                            <label className=\"form-check-label\">\r\n                                Банк\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                }\r\n                {!props.juridic &&\r\n                    <div className=\"juridic\">\r\n                        <div className=\"input-group\">\r\n                            <div>\r\n                                <label >Паспорт</label><br />\r\n                                <input name=\"TB_PASPSERY\" \r\n                                       type=\"text\" placeholder=\"AA\"\r\n                                       maxLength=\"2\"\r\n                                       value={fizObject.TB_KOD_OKPO}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                       style={{width:'50px'}} \r\n                                />\r\n                                <input name=\"TB_PASPNUMBER\" \r\n                                       type=\"text\" \r\n                                       placeholder=\"777 77 77\" \r\n                                       maxLength=\"7\"\r\n                                       value={fizObject.TB_KOD_OKPO}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                            {commonObject.TB_REZIDENT &&\r\n                                <div>\r\n                                    <label >ПИНФЛ</label><br />\r\n                                    <input \r\n                                        name=\"TB_PINFL\" \r\n                                        type=\"text\" \r\n                                        value={fizObject.TB_KOD_OKPO}\r\n                                        onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                    />\r\n                                </div>\r\n                            }\r\n                            <div>\r\n                                <label>Паспорт выдан</label><br />\r\n                                <input name=\"TB_PASPVIDAN\" \r\n                                       type=\"text\" \r\n                                       value={fizObject.TB_PASPVIDAN}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>Когда выдан</label><br />\r\n                                <input name=\"TB_PASPDATE\" \r\n                                       type=\"date\" \r\n                                       value={fizObject.TB_PASPDATE}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"\">\r\n                                <label>Фамилия</label><br />\r\n                                <input maxLength=\"20\" \r\n                                       name=\"TB_SURNAME\" \r\n                                       type=\"text\"\r\n                                       value={fizObject.TB_SURNAME}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                />\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <label>Имя</label><br />\r\n                                <input maxLength=\"20\" \r\n                                       name=\"TB_NAME\" \r\n                                       type=\"text\" \r\n                                       value={fizObject.TB_NAME}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                            />\r\n                            </div>\r\n                            <div className=\"\">\r\n                                <label>Отчество</label><br />\r\n                                <input maxLength=\"20\" \r\n                                        name=\"TB_PATRONYM\" \r\n                                        type=\"text\" \r\n                                        value={fizObject.TB_PATRONYM}\r\n                                        onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label>Пол</label><br />\r\n                                <select \r\n                                    name=\"TB_SEX\"\r\n                                    value={fizObject.TB_SEX}\r\n                                    onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                >\r\n                                    <option value=\"0\">Муж.</option>\r\n                                    <option value=\"1\">Жен.</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Дата рождения</label><br />\r\n                                <input type=\"date\" \r\n                                       name=\"TB_DATEBIRTH\" \r\n                                       value={fizObject.TB_DATEBIRTH}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                />\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Вод.права</label><br />\r\n                                <input name=\"TB_PRAVA_SERY\"\r\n                                       value={fizObject.TB_PRAVA_SERY}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)} \r\n                                />\r\n                                <input name=\"TB_PRAVA_NUMBER\"\r\n                                       value={fizObject.TB_PRAVA_NUMBER}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                                от\r\n                                <input type=\"date\" \r\n                                       name=\"TB_PRAVA_DATE\"\r\n                                       value={fizObject.TB_PRAVA_DATE}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label>ЧП</label><br />\r\n                                <input type=\"checkbox\" \r\n                                       name=\"TB_CHP\"\r\n                                       checked={fizObject.TB_CHP}\r\n                                       value={fizObject.TB_CHP}\r\n                                       onChange={e=>setProp('fiz',e.target.name, !fizObject.TB_CHP)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Удоств.предп.</label><br />\r\n                                <input type=\"date\" \r\n                                       name=\"TB_CERTIFICATE\"\r\n                                       value={fizObject.TB_CERTIFICATE}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Дата выдачи</label><br />\r\n                                <input type=\"date\" \r\n                                       name=\"TB_CERT_BEGIN\"\r\n                                       value={fizObject.TB_CERT_BEGIN}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Дата окончания</label><br />\r\n                                <input type=\"date\" \r\n                                       name=\"TB_CERT_END\"\r\n                                       value={fizObject.TB_CERT_END}\r\n                                       onChange={e=>setProp('fiz',e.target.name, e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                <div className=\"input-group\">\r\n                    <div className=\"\">\r\n                        <label >Страна</label><br />\r\n                        <select name=\"TB_COUNTRY\"\r\n                                value={commonObject.TB_COUNTRY}\r\n                                onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        >\r\n                            <option value=\"Узбекистан\">Узбекистан</option>\r\n                            <option value=\"Россия\">Россия</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Область</label><br />\r\n                        <select name=\"TB_OBLAST\"\r\n                                value={commonObject.TB_OBLAST}\r\n                                onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        >\r\n                            <option value=\"Ташкент\">Ташкент</option>\r\n                            <option value=\"Самарканд\">Самарканд</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Район/город</label><br />\r\n                        <select name=\"TB_RAYON\"\r\n                                value={commonObject.TB_RAYON}\r\n                                onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        >\r\n                            <option value=\"Ташкент\">Ташкент</option>\r\n                            <option value=\"Самарканд\">Самарканд</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Улица/Квартал</label><br />\r\n                        <input name=\"TB_ULICA\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_ULICA}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <div className=\"\">\r\n                        <label >Дом</label><br />\r\n                        <input name=\"TB_DOM\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_DOM}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Квартира</label><br />\r\n                        <input name=\"TB_KV\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_KV}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >E-mail</label><br />\r\n                        <input name=\"TB_EMAIL\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_EMAIL}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Сайт</label><br />\r\n                        <input name=\"TB_SITE\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_SITE}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"input-group\">\r\n                    <div className=\"\">\r\n                        <label >Почтовый индекс</label><br />\r\n                        <input name=\"TB_POCHTA\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_POCHTA}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Телефон 1</label><br />\r\n                        <input className=\"form-control phone\" \r\n                               name=\"TB_PHONE1\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_PHONE1}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Телефон 2</label><br />\r\n                        <input className=\"form-control phone\" \r\n                               name=\"TB_PHONE2\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_PHONE2}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <label >Факс</label><br />\r\n                        <input className=\"form-control phone\" \r\n                               name=\"TB_FAX\" \r\n                               type=\"text\" \r\n                               value={commonObject.TB_FAX}\r\n                               onChange={e=>setProp('common',e.target.name, e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <button className=\"btn btn-success btn-sm float-right my-3\" \r\n                        type=\"button\" \r\n                        onClick={save}\r\n                >\r\n                    Сохранить\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default Client;\r\n","D:\\abdumalik\\grapp\\src\\components\\Transport.js",["244","245","246"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch ,useSelector} from \"react-redux\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { transportCreate } from \"../redux/actions\";\r\nimport { contractAdd } from \"../redux/actions/contract\";\r\nimport UnvisibleFormElements from \"./UnvisibleFormElements\";\r\nimport { Modal, ClientTable, Client, ClientList } from './index';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nconst Transport = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const anketa=useSelector(state=>state.anketaReducer);\r\n    const [zagoladatelShowState, setZagoladatelShowState] = useState(false)\r\n    const [transportForm, setTransportForm] = useState({});\r\n    const validator = useRef(new SimpleReactValidator())\r\n    const [, forceUpdate] = useState();\r\n    useEffect(() => {\r\n        ipcRenderer.on(\"transport-saved\", save2);\r\n        ipcRenderer.on(\"remove-client\",remove2);\r\n        return ()=>{\r\n            ipcRenderer.removeListener('transport-saved', save2);\r\n            ipcRenderer.removeListener(\"remove-client\",remove2);\r\n            props.setBlock(false);\r\n        }\r\n    }, [])\r\n\r\n    const transportChanger = (e) => {\r\n        setTransportForm({ ...transportForm, [e.target.name]: e.target.value })\r\n    }\r\n    const setZ = (name, id) => {\r\n        setTransportForm({ ...transportForm, ZALOGADATEL: name,  ZALOGADATEL_ID: id });\r\n        props.setBlock(true);\r\n    }\r\n    const save = (e) => {\r\n        e.preventDefault()\r\n        // if (validator.current.allValid()) {\r\n        ipcRenderer.send(\"transport-create\", {...transportForm, ANKETA_ID:anketa.id})\r\n        // } else {\r\n        // validator.current.showMessages();\r\n        // forceUpdate(1)\r\n        // }\r\n    }\r\n    const save2 = (event, came) => {\r\n        props.addTransport()\r\n        dispatch(transportCreate({...came, voditels:[]}))\r\n     \r\n    }\r\n    const remove=(id, role)=>{\r\n        ipcRenderer.send('remove-client',id, role);\r\n        props.setBlock(false);\r\n    }\r\n    const remove2=(event, id, role)=>{\r\n        if(role==='ZALOGADATEL'){\r\n            setTransportForm({ZALOGADATEL:null, ZALOGADATEL_ID:null});\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"transport-form hyper-form mt-20\">\r\n                <Modal show={zagoladatelShowState} setShow={setZagoladatelShowState}>\r\n                    <ClientList changedAttribute=\"ZALOGADATEL\">\r\n                        <ClientTable\r\n                            action={setZ}\r\n                            setShow={setZagoladatelShowState}\r\n                            restricted={null}\r\n                        />\r\n                        <Client\r\n                            action={setZ}\r\n                            setShow={setZagoladatelShowState}\r\n                        />\r\n                    </ClientList>\r\n                </Modal>\r\n                <form>\r\n                    <div className=\"ml--10\">\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label className=\"required\">Владелец/Залогодатель/Лизингополучатель</label>\r\n                                <button type=\"button\" onClick={e => transportForm.ZALOGADATEL??setZagoladatelShowState(true)}>\r\n                                    {transportForm.ZALOGADATEL ?? 'Залогодатель'}\r\n                                </button>\r\n                                {\r\n                                    transportForm.ZALOGADATEL&&\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"remove\"\r\n                                        onClick={()=>remove(transportForm.ZALOGADATEL_ID, \"ZALOGADATEL\")}\r\n                                    >\r\n                                        remove\r\n                                    </button>\r\n                                }\r\n                                {validator.current.message('ZALOGADATEL_ID', transportForm.ZALOGADATEL_ID, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label className=\"required\">Гос.номер</label>\r\n                                <input type=\"text\" name=\"TB_REGNUMBER\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_REGNUMBER', transportForm.TB_REGNUMBER, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label className=\"required\">Год выпуска</label>\r\n                                <input type=\"text\" name=\"TB_YEAR\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_YEAR', transportForm.TB_YEAR, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>№ кузова</label>\r\n                                <input type=\"text\" name=\"TB_KUZOV\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_KUZOV', transportForm.TB_KUZOV, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Номер шасси</label>\r\n                                <input type=\"text\" name=\"TB_SHASSI\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_SHASSI', transportForm.TB_SHASSI, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>№ двигателя</label>\r\n                                <input type=\"text\" name=\"TB_DVIGATEL\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_DVIGATEL', transportForm.TB_DVIGATEL, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label className=\"required\">Марка</label>\r\n                                <select name=\"TB_MARKA\" onChange={transportChanger}>\r\n                                    <option value=\"0\">Выберите</option>\r\n                                    <option value=\"1\">1</option>\r\n                                </select>\r\n                                {validator.current.message('TB_MARKA', transportForm.TB_MARKA, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Модель </label>\r\n                                <select name=\"TB_MODEL\" onChange={transportChanger}>\r\n                                    <option value=\"0\">Выберите</option>\r\n                                    <option value=\"1\">1</option>\r\n                                </select>\r\n                                <input type=\"text\" name=\"TB_VMODEL\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_MODEL', transportForm.TB_MODEL, 'required')}\r\n                                {validator.current.message('TB_VMODEL', transportForm.TB_VMODEL, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label className=\"required\">Вид транспорта</label>\r\n                                <select name=\"TB_TYPE\" onChange={transportChanger}>\r\n                                    <option value=\"0\">Выберите</option>\r\n                                    <option value=\"1\">1</option>\r\n                                </select>\r\n                                {validator.current.message('TB_TYPE', transportForm.TB_TYPE, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Объем </label>\r\n                                <input type=\"text\" name=\"TB_MOSCH\" onChange={transportChanger} /><span>см³</span>\r\n                                {validator.current.message('TB_MOSCH', transportForm.TB_MOSCH, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-inline\">\r\n                                <label>Стоимость ТС</label>\r\n                                <input type=\"text\" name=\"TB_STOIMOST\" onChange={transportChanger} /><span>сум</span>\r\n                                {validator.current.message('TB_STOIMOST', transportForm.TB_STOIMOST, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Цвет кузова</label>\r\n                                <input type=\"text\" name=\"TB_COLOR\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_COLOR', transportForm.TB_COLOR, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>№ тех. паспорта</label>\r\n                                <input type=\"text\" name=\"TB_TEXPSERY\" onChange={transportChanger} />\r\n                                <input type=\"text\" name=\"TEXPNUMBER\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_TEXPSERY', transportForm.TB_TEXPSERY, 'required')}\r\n                                {validator.current.message('TEXPNUMBER', transportForm.TEXPNUMBER, 'required')}\r\n                            </div>\r\n                            <div className=\"form-inline\">\r\n                                <label>Дата выдачи</label>\r\n                                <input type=\"date\" name=\"TB_TEXPDATE\" onChange={transportChanger} />\r\n                                {validator.current.message('TB_TEXPDATE', transportForm.TB_TEXPDATE, 'required')}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"input-group\">\r\n                            <div className=\"form-block\">\r\n                                <label>Примечание</label>\r\n                                <textarea name=\"TB_COMMENT\" onChange={transportChanger}></textarea>\r\n                                {validator.current.message('TB_COMMENT', transportForm.TB_COMMENT, 'required')}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h5>КОЭФФИЦЕНТЫ</h5>\r\n                    <div className=\"ml--10\">\r\n                        <UnvisibleFormElements label=\"Дополнительно\">\r\n                            <div className=\"inline-children mb-20\">\r\n                                <label>Дефекты</label>\r\n                                <input type=\"checkbox\" name=\"TB_DEFEKT\" onChange={transportChanger} />\r\n                            </div>\r\n                            <div className=\"input-cols\">\r\n                                <div>\r\n                                    <span>1</span><input type=\"text\" name=\"TB_DEFEKT_OPIS1\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div>\r\n                                    <span>2</span><input type=\"text\" name=\"TB_DEFEKT_OPIS2\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div>\r\n                                    <span>3</span><input type=\"text\" name=\"TB_DEFEKT_OPIS3\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div>\r\n                                    <span>4</span><input type=\"text\" name=\"TB_DEFEKT_OPIS4\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div>\r\n                                    <span>5</span><input type=\"text\" name=\"TB_DEFEKT_OPIS5\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div>\r\n                                    <span>6</span><input type=\"text\" name=\"TB_DEFEKT_OPIS6\" onChange={transportChanger} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"input-group\">\r\n                                <div className=\"form-inline\">\r\n                                    <label>Количество доп. обор.</label>\r\n                                    <input type=\"text\" name=\"TB_DOP_KOL\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div className=\"form-inline\">\r\n                                    <label>Дополнительное оборудование</label>\r\n                                    <input type=\"text\" name=\"TB_SUMM_DOP_OBOR\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div className=\"form-inline\">\r\n                                    <label>Арендирование ТС</label>\r\n                                    <input type=\"text\" name=\"TB_SUMM_ARENDA\" onChange={transportChanger} />\r\n                                </div>\r\n                                <div className=\"form-inline\">\r\n                                    <label>Противоугонная сигнализация</label>\r\n                                    <input type=\"checkbox\" name=\"TB_SIGNAL\" onChange={transportChanger} />\r\n                                </div>\r\n                            </div>\r\n                            <h5>Дополнительное оборудование</h5>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Наименование</th>\r\n                                        <th>Спецификация</th>\r\n                                        <th>Кол-во</th>\r\n                                        <th>Стоимость</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Автомагнитола</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP1_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP1_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP1_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Колонки задние</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP2_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP2_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP2_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Колонки передние</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP3_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP3_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP3_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Противоугонное устройство</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP4_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP4_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP4_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>CD-changer</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP5_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP5_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP5_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Саб-буфер</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP6_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP6_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP6_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Усилитель</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP7_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP7_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP7_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Диски</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP8_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP8_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP8_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Шины</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP9_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP9_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP9_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Иное</td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP10_SPEC\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP10_KOL\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_DOP10_SUM\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </UnvisibleFormElements>\r\n                        <UnvisibleFormElements label=\"Предыдущее страхование\">\r\n                            <div className=\"input-group\">\r\n                                <div className=\"form-inline\">\r\n                                    <label>Страхователь</label>\r\n                                    <select name=\"TB_LASTINSURER\" onChange={transportChanger}>\r\n                                        <option value=\"\">Выберите</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>Год</th>\r\n                                        <th>Сумма убытков</th>\r\n                                        <th>Основная причина</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_GOD1\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_SUM1\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_PRICHINA1\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_GOD2\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_SUM2\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_PRICHINA2\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_GOD3\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_SUM3\" onChange={transportChanger} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" name=\"TB_UB_PRICHINA3\" onChange={transportChanger} />\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </UnvisibleFormElements>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"bg-skyblue btn-bg mv-20\" onClick={save}>Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Transport;","D:\\abdumalik\\grapp\\src\\components\\PaymentForm.js",["247"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport PAYMENTTYPES from '../constants/paymentTypes';\r\nimport { oplataAdd } from '../redux/actions';\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\nconst PaymentForm = (props) => {\r\n\tconst dispatch = useDispatch()\r\n\tconst initialState = {\r\n\t\tOPL_DATA: \"\",\r\n\t\tOPL_SUMMA: \"\",\r\n\t\tOPL_TYPE: \"\",\r\n\t\tDOC_NUM: \"\"\r\n\t}\r\n\tconst anketa = useSelector(state => state.anketaReducer);\r\n\tconst [paymentForm, setPaymentForm] = useState({ ...initialState })\r\n\tconst validator = useRef(new SimpleReactValidator());\r\n\tconst [, forceUpdate] = useState();\r\n\tuseEffect(() => {\r\n\t\tipcRenderer.on(\"payment-saved\", save2);\r\n\t}, [])\r\n\tconst changeHandler = (e) => {\r\n\t\tsetPaymentForm({\r\n\t\t\t...paymentForm,\r\n\t\t\t[e.target.name]: e.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tconst save = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (validator.current.allValid()) {\r\n\t\t\tipcRenderer.send('payment-create', { id: anketa.id, data: paymentForm });\r\n\t\t\tsetPaymentForm({ ...initialState });\r\n\t\t\tvalidator.current.hideMessages();\r\n\t\t} else {\r\n\t\t\tvalidator.current.showMessages();\r\n\t\t\tforceUpdate([]);\r\n\t\t}\r\n\t}\r\n\tconst save2 = (event, data) => {\r\n\t\tdispatch(oplataAdd(data))\r\n\t\tipcRenderer.removeListener('payment-saved', save2);\r\n\t}\r\n\treturn (\r\n\t\t<form className=\"paymentForm\" id=\"create-oplata-form\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-2 mb-10\">\r\n\t\t\t\t\t<div className=\"mb-10\">Дата:</div>\r\n\t\t\t\t\t<input type=\"date\" name=\"OPL_DATA\" onChange={changeHandler} value={paymentForm.OPL_DATA} />\r\n\t\t\t\t\t{validator.current.message('OPL_DATA', paymentForm.OPL_DATA, 'required')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3 mb-10\">\r\n\t\t\t\t\t<div className=\"mb-10\">Сумма оплаты:</div>\r\n\t\t\t\t\t<input type=\"number\" name=\"OPL_SUMMA\" onChange={changeHandler} value={paymentForm.OPL_SUMMA} />\r\n\t\t\t\t\t{validator.current.message('OPL_SUMMA', paymentForm.OPL_SUMMA, 'required')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2 mb-10\">\r\n\t\t\t\t\t<div className=\"mb-10\">Вид оплаты:</div>\r\n\t\t\t\t\t<select name=\"OPL_TYPE\" onChange={changeHandler} value={paymentForm.OPL_TYPE}>\r\n\t\t\t\t\t\t{PAYMENTTYPES.map(item =>\r\n\t\t\t\t\t\t\t<option key={item.id} value={item.id}>{item.name}</option>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t{validator.current.message('OPL_TYPE', paymentForm.OPL_TYPE, 'required')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-3 mb-10\">\r\n\t\t\t\t\t<div className=\"mb-10\">№ плат.документа / Примечание:</div>\r\n\t\t\t\t\t<input name=\"DOC_NUM\" onChange={changeHandler} value={paymentForm.DOC_NUM} />\r\n\t\t\t\t\t{validator.current.message('DOC_NUM', paymentForm.DOC_NUM, 'required')}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-2 mb-10 v-bottom\">\r\n\t\t\t\t\t<button onClick={save}>Оплата</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default PaymentForm;","D:\\abdumalik\\grapp\\src\\components\\Period.js",[],"D:\\abdumalik\\grapp\\src\\components\\VoditelList.js",[],"D:\\abdumalik\\grapp\\src\\components\\TransportList.js",["248","249","250"],"D:\\abdumalik\\grapp\\src\\components\\TopControls.js",[],"D:\\abdumalik\\grapp\\src\\components\\Transh.js",["251"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport addDates from '../helpers/addDates';\r\nimport { transhesUpdate } from '../redux/actions/transh';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { summation } from '../helpers/summation';\r\nconst { ipcRenderer } = window.require(\"electron\");\r\n\r\nconst Transh = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [totalAmount, setTotalAmount] = useState(0);\r\n  const [initialDate, setInitialDate] = useState('');\r\n  const [interval, setInterval] = useState(30);\r\n  const [count, setCount] = useState(2);\r\n  const [allSelected, setAllSelected] = useState(false);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [transhes, setTranshes] = useState([]);\r\n  const contract = useSelector(state => state.contractReducer);\r\n  const anketa = useSelector(state => state.anketaReducer);\r\n  const reduxTranshes = useSelector(state => state.transhReducer);\r\n  const globalPayment = useSelector(state => state.oplataReducer);\r\n  \r\n  useEffect(() => {\r\n    ipcRenderer.on('transch-saved', save2)\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    if (globalPayment.length !== 0) {\r\n      setDisabled(true);\r\n    } else {\r\n      setDisabled(false);\r\n    }\r\n  }, [globalPayment])\r\n  const reseparateCount = (value) => {\r\n    let newCount = value;\r\n    setCount(newCount);\r\n    let tempArray = [];\r\n    for (let i = 0; i < newCount; i++) {\r\n      tempArray.push({\r\n        date: addDates(initialDate, i * interval),\r\n        amount: totalAmount / newCount,\r\n        selected: false\r\n      });\r\n    }\r\n    setTranshes(tempArray);\r\n  }\r\n  const reseparateInterval = (value) => {\r\n    let newInterval = value;\r\n    let tempArray = [];\r\n    for (let i = 0; i < count; i++) {\r\n      tempArray.push({\r\n        date: addDates(initialDate, i * newInterval),\r\n        amount: totalAmount / count,\r\n        selected: false\r\n      });\r\n    }\r\n    setTranshes(tempArray);\r\n  }\r\n  const resetDate = (value, index) => {\r\n    const newTranshState = [...transhes];\r\n    newTranshState[index]['date'] = value;\r\n    setTranshes(newTranshState);\r\n  }\r\n  const resetAmount = (value, index) => {\r\n    const newTranshState = [...transhes];\r\n    newTranshState[index]['amount'] = Number(value);\r\n    setTranshes(newTranshState);\r\n  }\r\n  const resetSelected = (index) => {\r\n    const newTranshState = [...transhes];\r\n    newTranshState[index]['selected'] = !transhes[index]['selected'];\r\n    setAllSelected(false);\r\n    setTranshes(newTranshState);\r\n  }\r\n  const addTransh = () => {\r\n    let tempTransh = [...transhes];\r\n    tempTransh.push({ ...tempTransh[tempTransh.length - 1] });\r\n    setTranshes(tempTransh);\r\n    reseparateCount(tempTransh.length);\r\n  }\r\n  const checkAll = () => {\r\n    let newTranshState = [...transhes];\r\n    setAllSelected(!allSelected);\r\n\r\n    setTranshes(\r\n      newTranshState.map((item) => {\r\n        item['selected'] = !allSelected;\r\n        return item;\r\n      })\r\n    )\r\n  }\r\n  const deleteTransh = () => {\r\n    setTranshes(\r\n      [...transhes.filter(item => !item.selected)]\r\n    )\r\n  }\r\n  const cancel = () => {\r\n    reset();\r\n  }\r\n  const save = () => {\r\n    if (summation(transhes.map(item => item.amount)) !== summation(contract.map(item => item.premiyaAmount))) {\r\n      alert(\"Transh amount different than premiya\");\r\n      return 0;\r\n    }\r\n    ipcRenderer.send('transch-create', {\r\n      id: anketa.id,\r\n      data: transhes,\r\n    });\r\n  }\r\n  const save2 = (event, data) => {\r\n    console.log(data)\r\n    dispatch(transhesUpdate(data));\r\n    ipcRenderer.removeListener('transch-saved', save2);\r\n  }\r\n  const reset = useCallback(() => {\r\n    const summa = summation(contract.map((item) => item.premiyaAmount));\r\n    setTotalAmount(summa);\r\n    setInitialDate(anketa.INS_DATE);\r\n    if (reduxTranshes && reduxTranshes.length !== 0) {\r\n      setTranshes([...reduxTranshes]);\r\n    } else {\r\n      const tempArray = [];\r\n      for (let i = 0; i < count; i++) {\r\n        tempArray.push({\r\n          date: addDates(anketa.INS_DATE, i * interval),\r\n          amount: summa / count,\r\n          selected: false\r\n        });\r\n      }\r\n      setTranshes(tempArray);\r\n    }\r\n  }, [contract, anketa.INS_DATE, count, interval, reduxTranshes])\r\n  useEffect(() => {\r\n    reset();\r\n  }, [reset])\r\n  return (\r\n    <div className=\"transh\">\r\n      <div className=\"sparse\">\r\n        <div className=\"head\">\r\n          <h4>Ожидаемые транши</h4>\r\n          <div className=\"sparse\">\r\n            <button onClick={cancel}>\r\n              Отмена\r\n\t    \t\t\t</button>\r\n            <button onClick={deleteTransh}>\r\n              Удалить\r\n\t    \t\t\t</button>\r\n            <button onClick={save}>\r\n              Сохранить\r\n\t    \t\t\t</button>\r\n          </div>\r\n        </div>\r\n        <span>Период оплат (в днях):</span>\r\n        <input type=\"number\"\r\n          value={interval}\r\n          onChange={e => setInterval(e.target.value)}\r\n          onKeyUp={e => reseparateInterval(e.target.value)}\r\n          disabled={disabled}\r\n        />\r\n        <span>Количество траншов:</span>\r\n        <select disabled={disabled} value={count} onChange={e => reseparateCount(e.target.value)}>\r\n          <option value=\"2\">2</option>\r\n          <option value=\"3\">3</option>\r\n          <option value=\"4\">4</option>\r\n          <option value=\"5\">5</option>\r\n        </select>\r\n        {/*<button>Распределить</button>*/}\r\n      </div>\r\n      <table className=\"transh-table\" border=\"1\">\r\n        <thead>\r\n          <tr>\r\n            <td>\r\n              <input type=\"checkbox\"\r\n                onChange={checkAll}\r\n                value={allSelected}\r\n                checked={allSelected}\r\n                disabled={disabled}\r\n              />\r\n            </td>\r\n            <td>\r\n              ДАТА\r\n    \t\t\t\t</td>\r\n            <td>\r\n              СУММА\r\n    \t\t\t\t</td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transhes.map((item, index) =>\r\n            <tr key={index}>\r\n              <td>\r\n                <input type=\"checkbox\"\r\n                  value={item.selected}\r\n                  checked={item.selected}\r\n                  onChange={() => resetSelected(index)}\r\n                  disabled={disabled}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input type=\"date\"\r\n                  value={item.date}\r\n                  onChange={e => resetDate(e.target.value, index)}\r\n                  disabled={disabled}\r\n                />\r\n              </td>\r\n              <td>\r\n                <input type=\"number\"\r\n                  value={item.amount}\r\n                  onChange={e => resetAmount(e.target.value, index)}\r\n                  disabled={disabled}\r\n                />\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td>\r\n              Сумма:\r\n    \t\t\t\t</td>\r\n            <td>\r\n\r\n            </td>\r\n            <td>\r\n              {totalAmount} / <small>{summation(transhes.map(item => item.amount))}</small>\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n      <div className=\"h-right\">\r\n        {!disabled &&\r\n          <button onClick={addTransh}>\r\n            Добавить\r\n    \t\t</button>\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Transh;","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\index.js",[],"D:\\abdumalik\\grapp\\src\\redux\\actions\\oplata.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\transhReducer.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\oplataReducer.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\anketaReducer.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\polisReducer.js",[],"D:\\abdumalik\\grapp\\src\\components\\UnvisibleFormElements.js",[],"D:\\abdumalik\\grapp\\src\\redux\\reducers\\transportReducer.js",["252","253"],"import { TRANSPORT_CREATE, TRANSPORT_REMOVE, VODITEL_ADD, VODITEL_REMOVE } from '../constants';\r\nconst initialState = [];\r\nconst transportReducer = (transport = initialState, action) => {\r\n    switch (action.type) {\r\n        case TRANSPORT_CREATE:\r\n            return [\r\n                ...transport, action.payload\r\n            ];\r\n        case VODITEL_ADD:\r\n            const oldTransports = [...transport]\r\n            oldTransports[action.payload.idx] = { ...oldTransports[action.payload.idx], voditels: [...oldTransports[action.payload.idx].voditels, { id: action.payload.id, TB_NAME: action.payload.TB_NAME }] }\r\n            return [\r\n                ...oldTransports\r\n            ];\r\n        case VODITEL_REMOVE:\r\n            const newTransports = [...transport]\r\n            var newVoditels = [...transport[action.payload.idx].voditels];\r\n            newVoditels.splice(action.payload.vIdx, 1);\r\n            newTransports[action.payload.idx] = { ...newTransports[action.payload.idx], voditels: [...newVoditels] }\r\n            return [...newTransports]\r\n        case TRANSPORT_REMOVE:\r\n            var afterDeleteTransports = [...transport]; // make a separate copy of the array\r\n            const idx = afterDeleteTransports.findIndex(item => item.id === action.payload.idx)\r\n            if (idx != -1) {\r\n                afterDeleteTransports.splice(idx, 1);\r\n                return [...afterDeleteTransports]\r\n            }\r\n        default:\r\n            return transport\r\n    }\r\n}\r\nexport default transportReducer;","D:\\abdumalik\\grapp\\src\\redux\\reducers\\contractReducer.js",["254","255"],"import { CONTRACT_CREATE, CONTRACT_ADD, CONTRACT_REMOVE } from '../constants';\r\nconst initialState = [];\r\nconst contractReducer = (contract = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CONTRACT_CREATE:\r\n\t\t\treturn action.payload\r\n\t\tcase CONTRACT_ADD:\r\n\t\t\treturn [\r\n\t\t\t\t...contract, action.payload\r\n\t\t\t];\r\n\t\tcase CONTRACT_REMOVE:\r\n\t\t\tvar afterDeleteContracts = [...contract]; // make a separate copy of the array\r\n\t\t\tconst idx = afterDeleteContracts.findIndex(item => item.id === action.payload.idx)\r\n\t\t\tif (idx != -1) {\r\n\t\t\t\tafterDeleteContracts.splice(idx, 1);\r\n\t\t\t\treturn [...afterDeleteContracts]\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn contract\r\n\t}\r\n}\r\nexport default contractReducer;","D:\\abdumalik\\grapp\\src\\constants\\countries.js",[],"D:\\abdumalik\\grapp\\src\\redux\\actions\\transh.js",[],"D:\\abdumalik\\grapp\\src\\constants\\paymentTypes.js",[],"D:\\abdumalik\\grapp\\src\\redux\\actions\\contract.js",[],"D:\\abdumalik\\grapp\\src\\helpers\\addDates.js",[],"D:\\abdumalik\\grapp\\src\\components\\VoditelTable.js",["256","257"],"import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport leftArrow from '../assets/icons/arrow-left.svg';\r\nimport { voditelAdd } from \"../redux/actions/transport\";\r\n\r\n\r\nconst VoditelTable = (props) => {\r\n    const dispatch = useDispatch()\r\n    const appendVoditel = (id, TB_NAME) => {\r\n        \r\n        props.setShow()\r\n    }\r\n    return (\r\n        <>\r\n            <table className=\"bordered-table\" border=\"1\">\r\n                <thead>\r\n                    <tr style={{ backgroundColor: \"skyblue\" }}>\r\n                        <th></th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Patronymic</th>\r\n                        <th>Passport Serie</th>\r\n                        <th>Passport Number</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td width=\"5%\">\r\n                            <button onClick={() => appendVoditel(1, 'Mannop')}>\r\n                                <img src={leftArrow} alt=\"leftArrow\" />\r\n                            </button>\r\n                        </td>\r\n                        <td>Lorem</td>\r\n                        <td>Ispum</td>\r\n                        <td>Dolar</td>\r\n                        <td>AA</td>\r\n                        <td>1231234</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VoditelTable;","D:\\abdumalik\\grapp\\src\\components\\VoditelCreate.js",["258","259","260"],"D:\\abdumalik\\grapp\\src\\redux\\actions\\transport.js",[],"D:\\abdumalik\\grapp\\src\\helpers\\getCurrentDate.js",[],"D:\\abdumalik\\grapp\\src\\helpers\\summation.js",[],"D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Form.js",[],"D:\\abdumalik\\grapp\\src\\redux\\actions\\index.js",[],"D:\\abdumalik\\grapp\\src\\redux\\constants.js",[],"D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Anketa.js",["261","262","263","264","265","266"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { anketaCreate } from \"../../redux/actions\";\r\nimport SimpleReactValidator from 'simple-react-validator';\r\nimport { ClientList, \r\n         ClientTable, \r\n         Client, \r\n         Modal, \r\n         Countries, \r\n         Period \r\n     } from '../../components/';\r\nimport CURRENCYCONDITIONS from '../../constants/currencyConditions';\r\nimport CURRENCIES from '../../constants/currencies';\r\nimport getMaxDate from '../../helpers/getMaxDate';\r\nimport getCurrentDate from '../../helpers/getCurrentDate';\r\n\r\nconst { ipcRenderer } = window.require('electron');\r\nconst Anketa = (props, ref) => {\r\n    const dispatch = useDispatch()\r\n    const globalAnketa = useSelector(state => state.anketaReducer);\r\n\r\n    const [clientModalBeneficiaryState, setClientModalBeneficiaryState] = useState(false);\r\n    const [clientModalInsurerState, setClientModalInsurerState] = useState(false);\r\n    const [countryModalState, setCountryModalState] = useState(false);\r\n\r\n    const [anketaForm, setAnketaForm] = useState({\r\n        INS_DATE: getCurrentDate(),\r\n        INS_DATEF: getCurrentDate(),\r\n        INS_DATET: getCurrentDate(),\r\n    });\r\n\r\n    useEffect(() => {\r\n        ipcRenderer.on(\"anketa_saved\",save2);\r\n        ipcRenderer.on(\"remove-client\",remove2);\r\n        return ()=>{\r\n            ipcRenderer.removeListener(\"anketa_saved\",save2);\r\n            ipcRenderer.removeListener(\"remove-client\",remove2);\r\n        }\r\n    }, [\"init\"])\r\n\r\n    useEffect(() => {\r\n        setAnketaForm({ ...anketaForm, ...globalAnketa })\r\n    }, [globalAnketa])\r\n\r\n    useEffect(() => {\r\n        if (validator.current.allValid()) {\r\n            props.permit(2)\r\n        }\r\n    }, [anketaForm])\r\n\r\n    const validator = useRef(new SimpleReactValidator())\r\n\r\n    const changeAnketa = (e) => {\r\n        setAnketaForm({\r\n            ...anketaForm,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        ipcRenderer.send(\"anketa_save\", anketaForm)\r\n    }\r\n    const save2 = (event, args) => {\r\n        dispatch(anketaCreate(args))\r\n        alert('ANKETA saved');\r\n    }\r\n\r\n    const setB=(name,id, archive_id)=>{\r\n        if(id===anketaForm.INSURANT_ID){\r\n            alert(\"BENEFICIAR can not be same as INSURANT\");\r\n            return;\r\n        }\r\n        dispatch(anketaCreate({BENEFICIARY:name, BENEFICIARY_ID:id, BENEFICIARY_ARCHIVE: archive_id}));\r\n    }\r\n    const setI=(name,id, archive_id)=>{\r\n         if(id===anketaForm.BENEFICIARY_ID){\r\n            alert(\"INSURANT can not be same as BENEFICIAR\");\r\n            return;\r\n         }\r\n         dispatch(anketaCreate({INSURANT:name,INSURANT_ID:id, INSURANT_ARCHIVE:archive_id}));\r\n    }\r\n    const setC=(name)=>{\r\n        dispatch(anketaCreate({INS_COUNTRY:name}));\r\n    }\r\n    const remove=(id, role)=>{\r\n        ipcRenderer.send('remove-client',id, role)\r\n    }\r\n\r\n    const remove2=(event, id, role)=>{\r\n        if(role==='BENEFICIARY'){\r\n            dispatch(anketaCreate({BENEFICIARY:null, BENEFICIARY_ID:null}));\r\n        }\r\n        if(role==='INSURANT'){\r\n            dispatch(anketaCreate({INSURANT:null, INSURANT_ID:null}));\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <Modal show={clientModalBeneficiaryState} setShow={setClientModalBeneficiaryState}>\r\n                <ClientList changedAttribute=\"BENEFICIARY\">\r\n                    <ClientTable\r\n                        setShow={setClientModalBeneficiaryState}\r\n                        action={setB}\r\n                        restricted={anketaForm.INSURANT_ARCHIVE??null}\r\n                    />\r\n                    <Client\r\n                        setShow={setClientModalBeneficiaryState}\r\n                        action={setB}\r\n                    />\r\n                </ClientList>\r\n            </Modal>\r\n            <Modal show={clientModalInsurerState} setShow={setClientModalInsurerState}>\r\n                <ClientList changedAttribute=\"INSURANT\">\r\n                    <ClientTable\r\n                        setShow={setClientModalInsurerState}\r\n                        action={setI}\r\n                        restricted={anketaForm.BENEFICIARY_ARCHIVE??null}\r\n                    />\r\n                    <Client\r\n                        setShow={setClientModalInsurerState}\r\n                        action={setI}\r\n                    />\r\n                </ClientList>\r\n            </Modal>\r\n            <Modal show={countryModalState} setShow={setCountryModalState}>\r\n                <Countries \r\n                    setShow={setCountryModalState}\r\n                    action={setC}\r\n                />\r\n            </Modal>\r\n            <div className=\"anketaCnt\">\r\n                <div className=\"row\">\r\n                    <div className=\"label\">\r\n                        <span>Дата заключения:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <input type=\"date\" \r\n                               max={getMaxDate()} \r\n                               name=\"INS_DATE\" \r\n                               value={anketaForm.INS_DATE} \r\n                               onChange={changeAnketa}\r\n                        />\r\n                        {validator.current.message('INS_DATE', anketaForm.INS_DATE, 'required')}\r\n                    </div>\r\n\r\n                    <Period begin={anketaForm.INS_DATEF} end={anketaForm.INS_DATET} changeHandler={changeAnketa} />\r\n                    \r\n                    <div className=\"label\">\r\n                        <span>Страхователь:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <button onClick={() => anketaForm.INSURANT ?? setClientModalInsurerState(true)}>\r\n                            {anketaForm.INSURANT ?? 'Выберите...'}\r\n                        </button>\r\n                        {\r\n                            anketaForm.INSURANT&&\r\n                            <button\r\n                                className=\"remove\"\r\n                                onClick={()=>remove(anketaForm.INSURANT_ID, \"INSURANT\")}\r\n                            >\r\n                                remove\r\n                            </button>\r\n                        }\r\n                        {validator.current.message('INSURANT', anketaForm.INSURANT, 'required')}\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        <span>Бенефициар:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <button onClick={() => anketaForm.BENEFICIARY??setClientModalBeneficiaryState(true)}>\r\n                            {anketaForm.BENEFICIARY ?? 'Выберите...'}\r\n                        </button>\r\n                        {\r\n                            anketaForm.BENEFICIARY&&\r\n                            <button \r\n                                className=\"remove\"\r\n                                onClick={()=>remove(anketaForm.BENEFICIARY_ID, 'BENEFICIARY')}\r\n                            >\r\n                                remove\r\n                            </button>\r\n                        }\r\n                        {validator.current.message('BENEFICIARY', anketaForm.BENEFICIARY, 'required')}\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        <span>Валютные условия:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <select name=\"VAL_USLOVIYA\" \r\n                                value={anketaForm.VAL_USLOVIYA} \r\n                                onChange={changeAnketa}\r\n                        >\r\n                            <option value=\"\">Выберите</option>\r\n                            {\r\n                                CURRENCYCONDITIONS.map((item, index) => {\r\n                                    return (\r\n                                        <option key={index} value={index} title={item}>\r\n                                            {item.slice(0, 100)} ...\r\n                                        </option>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </select>\r\n                        {validator.current.message('VAL_USLOVIYA', anketaForm.VAL_USLOVIYA, 'required')}\r\n                    </div>\r\n                    {anketaForm.VAL_USLOVIYA &&\r\n                        <>\r\n                            <div className=\"label\">\r\n                                <span>Валюта:</span>\r\n                            </div>\r\n\r\n                            <div className=\"input\">\r\n                                <select name=\"VAL_TYPE\" \r\n                                        value={anketaForm.VAL_TYPE} \r\n                                        onChange={changeAnketa}>\r\n                                    <option value=\"\">Выберите</option>\r\n                                    {\r\n                                        CURRENCIES.map((item, index) => {\r\n                                            return (\r\n                                                <option key={index} value={index} title={item}>\r\n                                                    {item.slice(0, 100)} ...\r\n                                                </option>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                                {validator.current.message('VAL_TYPE', anketaForm.VAL_TYPE, 'required')}\r\n                            </div>\r\n                            <div className=\"label\">\r\n                                <span>Курс ЦБ:</span>\r\n                            </div>\r\n                            <div className=\"input\">\r\n                                <input type=\"number\" \r\n                                       name=\"VAL_KURS\" \r\n                                       value={anketaForm.VAL_KURS??''} \r\n                                       onChange={changeAnketa} \r\n                                />\r\n                                {validator.current.message('VAL_KURS', anketaForm.VAL_KURS, 'required')}\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <div className=\"label\">\r\n                        <span>Географическая зона:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <button onClick={() => setCountryModalState(true)}>\r\n                            {anketaForm.INS_COUNTRY??'Выберите...'}\r\n                        </button>\r\n                        {validator.current.message('INS_COUNTRY', anketaForm.INS_COUNTRY, 'required')}\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        <span>Источник оплаты:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <input id=\"sobst\" \r\n                               type=\"radio\" \r\n                               name=\"ISTOCHNIK_O\" \r\n                               onChange={changeAnketa} \r\n                               value={0} \r\n                               checked={anketaForm.ISTOCHNIK_O === '0'} \r\n                        />\r\n                        <label htmlFor=\"sobst\">Собственные средства</label>\r\n                        <input id=\"budget\" \r\n                               type=\"radio\" \r\n                               name=\"ISTOCHNIK_O\" \r\n                               onChange={changeAnketa} \r\n                               value={1} \r\n                               checked={anketaForm.ISTOCHNIK_O === '1'} checked\r\n                        />\r\n                        <label htmlFor=\"budget\">Бюджетные средства</label>\r\n                        {validator.current.message('ISTOCHNIK_O', anketaForm.ISTOCHNIK_O, 'required')}\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        <span>Рег.номер:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <input type=\"text\" name=\"INS_NUM\" value={anketaForm.INS_NUM??''} onChange={changeAnketa} />\r\n                        {validator.current.message('INS_NUM', anketaForm.INS_NUM, 'required')}\r\n                    </div>\r\n                    <div className=\"label\">\r\n                        <span>Старый номер договора:</span>\r\n                    </div>\r\n                    <div className=\"input\">\r\n                        <input type=\"text\" name=\"OLD_DOGNUM\" value={anketaForm.OLD_DOGNUM??''} onChange={changeAnketa} />\r\n                        {validator.current.message('OLD_DOGNUM', anketaForm.OLD_DOGNUM, 'required')}\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={save}>Save</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Anketa;","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Contract.js",["267","268","269","270"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { datediff } from \"../../helpers/getDaysBetweenTwoDates\";\r\nimport { contractCreate } from \"../../redux/actions\";\r\nconst { ipcRenderer } = window.require('electron');\r\nconst Dogovor = (props) => {\r\n    const dispatch = useDispatch()\r\n    \r\n    const anketa = useSelector(state => state.anketaReducer);\r\n    const [premiyas, setPremiyas] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        ipcRenderer.on(\"contract-saved\", save2);\r\n        ipcRenderer.send(\"get-contracts\", anketa.id);\r\n        ipcRenderer.on(\"get-contracts\", get);\r\n        return ()=>{\r\n            ipcRenderer.removeListener(\"get-contracts\", get);\r\n            ipcRenderer.removeListener('contract-saved', save2);\r\n        }\r\n    }, []);\r\n\r\n    const save = () => {\r\n        ipcRenderer.send(\"contract-create\", premiyas)\r\n    }\r\n\r\n    const save2 = (event, data) => {\r\n        // dispatch(contractCreate([...data]))\r\n        alert(\"Contract saved\");\r\n        ipcRenderer.removeListener('contract-saved', save2);\r\n    }\r\n\r\n    const changePremiya = (e, index, prop) => {\r\n        \r\n        let tempObj = [...premiyas];\r\n        let target = parseFloat(e.target.value);\r\n\r\n        switch (prop) {\r\n            case 'insuranceAmount':\r\n                tempObj[index]['insuranceAmount'] = target;\r\n                tempObj[index]['premiyaAmount'] = tempObj[index]['premiyaPercent'] * target / 100;\r\n                tempObj[index]['franchiseAmount'] = tempObj[index]['franchisePercent'] * target / 100;\r\n                setPremiyas(tempObj)\r\n                break;\r\n            case 'premiyaPercent':\r\n                tempObj[index]['premiyaPercent'] = target;\r\n                tempObj[index]['premiyaAmount'] = tempObj[index]['insuranceAmount'] * target / 100;\r\n                setPremiyas(tempObj);\r\n                break;\r\n            case 'franchisePercent':\r\n                tempObj[index]['franchisePercent'] = target;\r\n                tempObj[index]['franchiseAmount'] = target * tempObj[index]['insuranceAmount'];\r\n                setPremiyas(tempObj);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const get=(event, payload)=>{\r\n        const contracts=payload.map(item=>item.dataValues);\r\n        setPremiyas(contracts);\r\n    }\r\n    return (\r\n        <div className=\"contract-form\">\r\n            <div className=\"contract-top\">\r\n                <h4><b>Номер договора</b></h4>\r\n                <span>1021/2121</span>\r\n                <h4>Дата подписания</h4>\r\n                {/* <span>{globalAnketa.INS_DATE ?? ''}</span> */}\r\n                <h4>Период страхования</h4>\r\n                <div className=\"sparse\">\r\n                    <span>с</span>\r\n                    {/* <span> {new Date(globalAnketa.INS_DATEF).toString() ?? ''}</span> */}\r\n                    <span>по</span>\r\n                    {/* <span>{new Date(globalAnketa.INS_DATET).toString()?? ''}г</span> */}\r\n                </div>\r\n                <h4>Срок действия:</h4>\r\n                {/* <span>{globalAnketa.INS_DATEF ? datediff(globalAnketa.INS_DATEF, globalAnketa.INS_DATET) : \"\"} </span>дня(ей) */}\r\n            </div>\r\n            <div className=\"form-main\">\r\n                <div className=\"form-header\">\r\n                    <h4>Страховые покрытия</h4>\r\n                    <div className=\"sparse\">\r\n                        {/*<button>Отмена</button>*/}\r\n                        <button className=\"bg-skyblue\" onClick={save}>Сохранить</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <table className=\"premiya-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Вид страхования</th>\r\n                                <th>Страховая сумма</th>\r\n                                <th>Премия %</th>\r\n                                <th>Премия</th>\r\n                                <th>Количество объектов</th>\r\n                                <th>Франшиза</th>\r\n                                <th>Фр.условная</th>\r\n                                <th>Франшиза %</th>\r\n                                <th>Фр.сумма</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {premiyas.map((item, index) =>\r\n                                <Fragment key={`premiya${index}`}>\r\n                                    <tr key={\"name\" + index}>\r\n                                        <td colSpan=\"9\"><h5>{item.name}</h5></td>\r\n                                    </tr>\r\n                                    <tr key={\"info\" + index}>\r\n                                        <td>Страхование транспортных средств, выставляемых в залог</td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                value={item.insuranceAmount}\r\n                                                onChange={e => changePremiya(e, index, 'insuranceAmount')}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                value={item.premiyaPercent}\r\n                                                onChange={e => changePremiya(e, index, 'premiyaPercent')}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" value={item.premiyaAmount} readOnly />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input value=\"1\" disabled />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"checkbox\"\r\n                                                value={item.franchise}\r\n\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"checkbox\"\r\n                                                value={item.franchiseCond} />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\"\r\n                                                value={item.franchisePercent}\r\n                                                onChange={e => changePremiya(e, index, 'franchisePercent')}\r\n                                            />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type=\"text\" value={item.franchiseAmount} readOnly />\r\n                                        </td>\r\n                                    </tr>\r\n                                </Fragment>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Dogovor;","D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Payment.js",["271"],"import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Transh, PaymentForm, MyTable } from '../../components/';\r\nimport currencies from '../../constants/currencies';\r\nimport { summation } from \"../../helpers/summation\";\r\nimport { transhesUpdate } from '../../redux/actions/transh';\r\nconst { ipcRenderer } = window.require('electron');\r\n\r\nconst Payment = (props) => {\r\n\tconst dispatch = useDispatch();\r\n\t// const contracts = useSelector(state => state.contractReducer);\r\n\t// const globalAnketa = useSelector(state => state.anketaReducer);\r\n\t// const oplatas = useSelector(state => state.oplataReducer);\r\n\t// const globalTransh = useSelector(state => state.transhReducer);\r\n\r\n\tconst anketa = useSelector(state => state.anketaReducer);\r\n\tconst [transh, setTranshState] = useState(false);\r\n\tconst [contracts, setContracts] = useState([]);\r\n\tconst [oplatas, setOplatas] = useState([]);\r\n\tconst controlTransh = (val) => {\r\n\t\tsetTranshState(val);\r\n\t\tif (!val) {\r\n\t\t\tdispatch(transhesUpdate([]));\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tipcRenderer.send(\"get-payment\", anketa.id);\r\n\t\tipcRenderer.on(\"get-payment\", load);\r\n\t\treturn ()=>{\r\n\t\t\tipcRenderer.removeListener('get-payment', load);\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst load=(event, payload)=>{\r\n\t\tconst contracts=payload.contracts.map(item=>item.dataValues);\r\n        const oplatas=payload.oplatas.map(item=>item.dataValues);\r\n\t\tsetContracts(contracts)\r\n\t\tsetOplatas(oplatas)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\tУсловие оплаты:\r\n\t    \t\t</div>\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\t\t<input type=\"radio\"\r\n\t\t\t\t\t\t\t\tonClick={() => controlTransh(false)}\r\n\t\t\t\t\t\t\t\tid=\"once\" name=\"oplata\" defaultChecked={!transh}\r\n\t\t\t\t\t\t\t\tdisabled={oplatas.length !== 0}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"once\">\r\n\t\t\t\t\t\t\t\tЕдиновременная оплата\r\n\t\t    \t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\t\t<input type=\"radio\"\r\n\t\t\t\t\t\t\t\tonClick={() => controlTransh(true)}\r\n\t\t\t\t\t\t\t\tid=\"transh\" name=\"oplata\" defaultChecked={transh}\r\n\t\t\t\t\t\t\t\tdisabled={oplatas.length !== 0}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label htmlFor=\"transh\">\r\n\t\t\t\t\t\t\t\tОплата траншами\r\n\t\t    \t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-6\">\r\n\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\tСтраховая сумма: {summation([...contracts.map(item => item.insuranceAmount)])}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\tПремия:\t{summation([...contracts.map(item => item.premiyaAmount)])}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\tУчет: {currencies[anketa.VAL_TYPE] ?? \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-10\">\r\n\t\t\t\t\t\tОплата:\t{currencies[anketa.VAL_TYPE] ?? \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\ttransh && <Transh />\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t<h4 className=\"mb-4\">Оплата</h4>\r\n\t\t\t\t<MyTable columns={\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Дата оплаты',\r\n\t\t\t\t\t\t\tdataIndex: 'OPL_DATA',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Оплата',\r\n\t\t\t\t\t\t\tdataIndex: 'OPL_SUMMA',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Тип оплаты',\r\n\t\t\t\t\t\t\tdataIndex: 'OPL_TYPE',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Пользователь',\r\n\t\t\t\t\t\t\tdataIndex: '',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Ком.%',\r\n\t\t\t\t\t\t\tdataIndex: '',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Комиссия',\r\n\t\t\t\t\t\t\tdataIndex: '',\r\n\t\t\t\t\t\t\tfiltered: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Агент.согл.',\r\n\t\t\t\t\t\t\tdataIndex: '',\r\n\t\t\t\t\t\t\tfiltered: false,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t\t\tdata={oplatas}\r\n\t\t\t\t/>\r\n\t\t\t\t{oplatas.length === 0 && <div>Оплата не произведена</div>}\r\n\t\t\t\t<div className=\"mt-4\">Остаток:\t<b>{summation([...contracts.map(item => item.premiyaAmount)])}</b></div>\r\n\t\t\t</div>\r\n\t\t\t<PaymentForm />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Payment;","D:\\abdumalik\\grapp\\src\\redux\\actions\\anketa.js",[],"D:\\abdumalik\\grapp\\src\\screens\\Contract21\\TransportTable.js",["272"],"D:\\abdumalik\\grapp\\src\\screens\\Contract21\\Polis.js",[],"D:\\abdumalik\\grapp\\src\\constants\\currencies.js",[],"D:\\abdumalik\\grapp\\src\\helpers\\getMaxDate.js",[],"D:\\abdumalik\\grapp\\src\\helpers\\getDaysBetweenTwoDates.js",["273"],"function parseDate(str) {\r\n    var mdy = str.split('-');\r\n    return new Date(mdy[0], mdy[1]-1, mdy[2]);\r\n}\r\n\r\nexport function datediff(first, second) {\r\n    console.log(first, second)\r\n    return \"\"\r\n    // const fir=parseDate(first)\r\n    // const sec=parseDate(second)\r\n    // // Take the difference between the dates and divide by milliseconds per day.\r\n    // // Round to nearest whole number to deal with DST.\r\n    // return Math.round((sec-fir)/(1000*60*60*24));\r\n}\r\n","D:\\abdumalik\\grapp\\src\\constants\\currencyConditions.js",[],{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","severity":1,"message":"279","line":2,"column":9,"nodeType":"280","messageId":"281","endLine":2,"endColumn":22},{"ruleId":"282","severity":1,"message":"283","line":19,"column":4,"nodeType":"284","endLine":19,"endColumn":6,"suggestions":"285"},{"ruleId":"286","severity":1,"message":"287","line":52,"column":9,"nodeType":"288","messageId":"289","endLine":52,"endColumn":16},{"ruleId":"286","severity":1,"message":"287","line":90,"column":9,"nodeType":"288","messageId":"289","endLine":90,"endColumn":16},{"ruleId":"282","severity":1,"message":"290","line":20,"column":8,"nodeType":"284","endLine":20,"endColumn":16,"suggestions":"291"},{"ruleId":"282","severity":1,"message":"292","line":20,"column":9,"nodeType":"293","endLine":20,"endColumn":15},{"ruleId":"278","severity":1,"message":"294","line":5,"column":10,"nodeType":"280","messageId":"281","endLine":5,"endColumn":21},{"ruleId":"278","severity":1,"message":"295","line":17,"column":14,"nodeType":"280","messageId":"281","endLine":17,"endColumn":25},{"ruleId":"282","severity":1,"message":"296","line":26,"column":8,"nodeType":"284","endLine":26,"endColumn":10,"suggestions":"297"},{"ruleId":"282","severity":1,"message":"298","line":22,"column":5,"nodeType":"284","endLine":22,"endColumn":7,"suggestions":"299"},{"ruleId":"278","severity":1,"message":"300","line":10,"column":10,"nodeType":"280","messageId":"281","endLine":10,"endColumn":25},{"ruleId":"278","severity":1,"message":"301","line":14,"column":8,"nodeType":"280","messageId":"281","endLine":14,"endColumn":16},{"ruleId":"282","severity":1,"message":"302","line":31,"column":5,"nodeType":"284","endLine":31,"endColumn":7,"suggestions":"303"},{"ruleId":"282","severity":1,"message":"298","line":24,"column":6,"nodeType":"284","endLine":24,"endColumn":8,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":24,"column":21,"nodeType":"307","messageId":"308","endLine":24,"endColumn":23},{"ruleId":"309","severity":1,"message":"310","line":28,"column":9,"nodeType":"311","messageId":"312","endLine":29,"endColumn":29},{"ruleId":"305","severity":1,"message":"306","line":14,"column":12,"nodeType":"307","messageId":"308","endLine":14,"endColumn":14},{"ruleId":"309","severity":1,"message":"310","line":18,"column":3,"nodeType":"311","messageId":"312","endLine":19,"endColumn":19},{"ruleId":"278","severity":1,"message":"313","line":4,"column":10,"nodeType":"280","messageId":"281","endLine":4,"endColumn":20},{"ruleId":"278","severity":1,"message":"301","line":8,"column":11,"nodeType":"280","messageId":"281","endLine":8,"endColumn":19},{"ruleId":"278","severity":1,"message":"313","line":3,"column":10,"nodeType":"280","messageId":"281","endLine":3,"endColumn":20},{"ruleId":"278","severity":1,"message":"301","line":7,"column":8,"nodeType":"280","messageId":"281","endLine":7,"endColumn":16},{"ruleId":"282","severity":1,"message":"298","line":14,"column":5,"nodeType":"284","endLine":14,"endColumn":7,"suggestions":"314"},{"ruleId":"278","severity":1,"message":"315","line":1,"column":46,"nodeType":"280","messageId":"281","endLine":1,"endColumn":57},{"ruleId":"282","severity":1,"message":"316","line":39,"column":8,"nodeType":"284","endLine":39,"endColumn":16,"suggestions":"317"},{"ruleId":"282","severity":1,"message":"292","line":39,"column":9,"nodeType":"293","endLine":39,"endColumn":15},{"ruleId":"282","severity":1,"message":"318","line":43,"column":8,"nodeType":"284","endLine":43,"endColumn":22,"suggestions":"319"},{"ruleId":"282","severity":1,"message":"320","line":49,"column":8,"nodeType":"284","endLine":49,"endColumn":20,"suggestions":"321"},{"ruleId":"322","severity":1,"message":"323","line":268,"column":73,"nodeType":"324","endLine":268,"endColumn":80},{"ruleId":"278","severity":1,"message":"325","line":3,"column":10,"nodeType":"280","messageId":"281","endLine":3,"endColumn":18},{"ruleId":"278","severity":1,"message":"326","line":4,"column":10,"nodeType":"280","messageId":"281","endLine":4,"endColumn":24},{"ruleId":"278","severity":1,"message":"301","line":7,"column":11,"nodeType":"280","messageId":"281","endLine":7,"endColumn":19},{"ruleId":"282","severity":1,"message":"327","line":20,"column":8,"nodeType":"284","endLine":20,"endColumn":10,"suggestions":"328"},{"ruleId":"282","severity":1,"message":"329","line":32,"column":5,"nodeType":"284","endLine":32,"endColumn":7,"suggestions":"330"},{"ruleId":"278","severity":1,"message":"331","line":6,"column":9,"nodeType":"280","messageId":"281","endLine":6,"endColumn":20},{"ruleId":"278","severity":1,"message":"332","line":1,"column":10,"nodeType":"280","messageId":"281","endLine":1,"endColumn":19},"no-native-reassign",["333"],"no-negated-in-lhs",["334"],"no-unused-vars","'deletePayment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.restricted' and 'selectClient'. Either include them or remove the dependency array.","ArrayExpression",["335"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","React Hook useEffect has missing dependencies: 'props.initialObject' and 'save2'. Either include them or remove the dependency array. If 'setCommonObject' needs the current value of 'props.initialObject', you can also switch to useReducer instead of useState and read 'props.initialObject' in the reducer.",["336"],"The \"init\" literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'contractAdd' is defined but never used.","'forceUpdate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'save2'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["337"],"React Hook useEffect has a missing dependency: 'save2'. Either include it or remove the dependency array.",["338"],"'transportRemove' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'anketa.id' and 'remove2'. Either include them or remove the dependency array.",["339"],["340"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","'voditelAdd' is defined but never used.",["341"],"'useCallback' is defined but never used.","React Hook useEffect has missing dependencies: 'remove2' and 'save2'. Either include them or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'anketaForm'. Either include it or remove the dependency array. You can also do a functional update 'setAnketaForm(a => ...)' if you only need 'anketaForm' in the 'setAnketaForm' call.",["343"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["344"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'datediff' is defined but never used.","'contractCreate' is defined but never used.","React Hook useEffect has missing dependencies: 'anketa.id' and 'save2'. Either include them or remove the dependency array.",["345"],"React Hook useEffect has a missing dependency: 'anketa.id'. Either include it or remove the dependency array.",["346"],"'ipcRenderer' is assigned a value but never used.","'parseDate' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},{"desc":"353","fix":"357"},{"desc":"353","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},"Update the dependencies array to be: [props.restricted, selectClient]",{"range":"369","text":"370"},"Update the dependencies array to be: [props.initialObject, save2]",{"range":"371","text":"372"},"Update the dependencies array to be: [props, save2]",{"range":"373","text":"374"},"Update the dependencies array to be: [save2]",{"range":"375","text":"376"},"Update the dependencies array to be: [anketa.id, remove2]",{"range":"377","text":"378"},{"range":"379","text":"376"},{"range":"380","text":"376"},"Update the dependencies array to be: [remove2, save2]",{"range":"381","text":"382"},"Update the dependencies array to be: [anketaForm, globalAnketa]",{"range":"383","text":"384"},"Update the dependencies array to be: [anketaForm, props]",{"range":"385","text":"386"},"Update the dependencies array to be: [anketa.id, save2]",{"range":"387","text":"388"},"Update the dependencies array to be: [anketa.id]",{"range":"389","text":"390"},[536,538],"[props.restricted, selectClient]",[588,596],"[props.initialObject, save2]",[1172,1174],"[props, save2]",[789,791],"[save2]",[1153,1155],"[anketa.id, remove2]",[1092,1094],[476,478],[1549,1557],"[remove2, save2]",[1651,1665],"[anketaForm, globalAnketa]",[1785,1797],"[anketaForm, props]",[830,832],"[anketa.id, save2]",[1248,1250],"[anketa.id]"]